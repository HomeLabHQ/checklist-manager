version: "3.8"

x-service: &service
  restart: always
  build:
    dockerfile: ./docker/backend/Dockerfile
    context: ./
  env_file:
    - .env
  image: checklist-manager/backend-${ENVIRONMENT}

services:
  api:
    <<: *service
    container_name: checklist-manager-api-${ENVIRONMENT}
    command:
      - prod
    depends_on:
      db:
        condition: service_healthy

  celery-worker:
    <<: *service
    depends_on:
      - redis
    command: celery worker -l INFO -Q django
  celery_beat:
    <<: *service
    depends_on:
      - redis
    command: celery -A core beat -l info
  db:
    image: postgres:alpine3.18
    container_name: checklist-manager-db-${ENVIRONMENT}
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
  nginx:
    container_name: checklist-manager-nginx-${ENVIRONMENT}
    build:
      dockerfile: ./docker/nginx/Dockerfile
      context: ./
      args:
        - API_URL
    restart: always
    ports:
      - 80:80
    env_file:
      - .env
    volumes:
      - static:/static
      - attachments:/attachments
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
volumes:
  static:
  attachments:
  postgres_data:
  redis_data:
